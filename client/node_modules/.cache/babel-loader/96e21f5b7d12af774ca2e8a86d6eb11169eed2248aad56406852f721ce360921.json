{"ast":null,"code":"import React,{useCallback,useState}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function SelectDaysTable(_ref){let{onSelectedDaysChange}=_ref;const[selectedDays,setSelectedDays]=useState([]);// Use useState to store the selected days\nconst days=['lun','mar','mer','gio','ven','sab'];const times=['08:00','09:00','10:00','11:00','12:00','14:00','15:00','16:00','17:00','18:00','19:00'];function getCellClass(time,day){if(selectedDays.some(item=>item.time===time&&item.day===day)){return{style:{backgroundColor:'#34c6eb'}};}else{return{style:{backgroundColor:'transparent'}};}}const handleCellClick=useCallback((time,day)=>{const cell={time,day};setSelectedDays(prevSelectedCells=>{if(prevSelectedCells.some(cellInArray=>cellInArray.time===time&&cellInArray.day===day)){const updatedCells=prevSelectedCells.filter(cellInArray=>cellInArray.time!==time||cellInArray.day!==day);onSelectedDaysChange(updatedCells);// Call the callback function with the updated state\nreturn updatedCells;}else{const updatedCells=[...prevSelectedCells,cell];onSelectedDaysChange(updatedCells);// Call the callback function with the updated state\nreturn updatedCells;}});},[onSelectedDaysChange]);return/*#__PURE__*/_jsxs(\"table\",{className:\"table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Orario\"}),days.map((day,index)=>/*#__PURE__*/_jsx(\"th\",{children:day.toUpperCase()},index))]})}),/*#__PURE__*/_jsx(\"tbody\",{children:times.map((time,rowIndex)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{scope:\"row\",children:time}),days.map((day,dayIndex)=>{const{style}=getCellClass(time,day);return/*#__PURE__*/_jsx(\"td\",{style:style,onClick:()=>handleCellClick(time,day),children:/*#__PURE__*/_jsx(\"a\",{href:\"#\",style:{display:\"block\",width:\"100%\",height:\"100%\"}})},dayIndex);})]},rowIndex))})]});}export default SelectDaysTable;","map":{"version":3,"names":["React","useCallback","useState","jsx","_jsx","jsxs","_jsxs","SelectDaysTable","_ref","onSelectedDaysChange","selectedDays","setSelectedDays","days","times","getCellClass","time","day","some","item","style","backgroundColor","handleCellClick","cell","prevSelectedCells","cellInArray","updatedCells","filter","className","children","map","index","toUpperCase","rowIndex","scope","dayIndex","onClick","href","display","width","height"],"sources":["/Users/matteofranchini/Documents/GitHub/piattaforma_tutoraggio/client/src/components/mainLayout/template/SelectDaysTable.js"],"sourcesContent":["import React, {useCallback, useState} from \"react\";\n\nfunction SelectDaysTable({ onSelectedDaysChange }) {\n    const [selectedDays, setSelectedDays] = useState([]); // Use useState to store the selected days\n\n    const days = ['lun', 'mar', 'mer', 'gio', 'ven', 'sab'];\n    const times = ['08:00', '09:00', '10:00', '11:00', '12:00', '14:00', '15:00', '16:00', '17:00', '18:00', '19:00'];\n\n    function getCellClass(time, day) {\n        if (selectedDays.some((item) => item.time === time && item.day === day)) {\n            return {\n                style: { backgroundColor: '#34c6eb' },\n            };\n        } else {\n            return {\n                style: { backgroundColor: 'transparent' },\n            };\n        }\n    }\n\n    const handleCellClick = useCallback((time, day) => {\n        const cell = { time, day };\n        setSelectedDays((prevSelectedCells) => {\n            if (prevSelectedCells.some((cellInArray) => cellInArray.time === time && cellInArray.day === day)) {\n                const updatedCells = prevSelectedCells.filter((cellInArray) => cellInArray.time!== time || cellInArray.day!== day);\n                onSelectedDaysChange(updatedCells); // Call the callback function with the updated state\n                return updatedCells;\n            } else {\n                const updatedCells = [...prevSelectedCells, cell];\n                onSelectedDaysChange(updatedCells); // Call the callback function with the updated state\n                return updatedCells;\n            }\n        });\n    }, [onSelectedDaysChange]);\n\n    return (\n        <table className=\"table\">\n            <thead>\n            <tr>\n                <th>Orario</th>\n                {days.map((day, index) => (\n                    <th key={index}>{day.toUpperCase()}</th>\n                ))}\n            </tr>\n            </thead>\n            <tbody>\n            {times.map((time, rowIndex) => (\n                <tr key={rowIndex}>\n                    <th scope=\"row\">{time}</th>\n                    {days.map((day, dayIndex) => {\n                        const { style } = getCellClass(time, day);\n                        return (\n                            <td\n                                key={dayIndex}\n                                style={style}\n                                onClick={() => handleCellClick(time, day)}\n                            >\n                                <a href=\"#\" style={{ display: \"block\", width: \"100%\", height: \"100%\" }}></a>\n                            </td>\n                        );\n                    })}\n                </tr>\n            ))}\n            </tbody>\n        </table>\n    );\n}\n\nexport default SelectDaysTable;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}