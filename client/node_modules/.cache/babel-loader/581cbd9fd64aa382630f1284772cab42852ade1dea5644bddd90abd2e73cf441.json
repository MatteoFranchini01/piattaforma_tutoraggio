{"ast":null,"code":"var _jsxFileName = \"/Users/deborabini/Documents/GitHub/piattaforma_tutoraggio/client/src/components/mainLayout/template/SelectDaysTable.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SelectDaysTable({\n  onSelectedDaysChange\n}) {\n  _s();\n  const [selectedDays, setSelectedDays] = useState([]); // Use useState to store the selected days\n\n  const days = ['lun', 'mar', 'mer', 'gio', 'ven', 'sab'];\n  const times = ['08:00', '09:00', '10:00', '11:00', '12:00', '14:00', '15:00', '16:00', '17:00', '18:00', '19:00'];\n  function getCellClass(time, day) {\n    if (selectedDays.some(item => item.time === time && item.day === day)) {\n      return {\n        style: {\n          backgroundColor: '#34c6eb'\n        }\n      };\n    } else {\n      return {\n        style: {\n          backgroundColor: 'transparent'\n        }\n      };\n    }\n  }\n  const handleCellClick = useCallback((time, day) => {\n    const cell = {\n      time,\n      day\n    };\n    setSelectedDays(prevSelectedCells => {\n      if (prevSelectedCells.some(cellInArray => cellInArray.time === time && cellInArray.day === day)) {\n        const updatedCells = prevSelectedCells.filter(cellInArray => cellInArray.time !== time || cellInArray.day !== day);\n        onSelectedDaysChange(updatedCells); // Call the callback function with the updated state\n        return updatedCells;\n      } else {\n        const updatedCells = [...prevSelectedCells, cell];\n        onSelectedDaysChange(updatedCells); // Call the callback function with the updated state\n        return updatedCells;\n      }\n    });\n  }, [onSelectedDaysChange]);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"table\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Orario\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this), days.map((day, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n          children: day.toUpperCase()\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: times.map((time, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          scope: \"row\",\n          children: time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), days.map((day, dayIndex) => {\n          const {\n            style\n          } = getCellClass(time, day);\n          return /*#__PURE__*/_jsxDEV(\"td\", {\n            style: style,\n            onClick: () => handleCellClick(time, day),\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              style: {\n                display: \"block\",\n                width: \"100%\",\n                height: \"100%\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 33\n            }, this)\n          }, dayIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this);\n        })]\n      }, rowIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(SelectDaysTable, \"ccXUKN522QJcHFZzT1jKIJhv9JY=\");\n_c = SelectDaysTable;\nexport default SelectDaysTable;\nvar _c;\n$RefreshReg$(_c, \"SelectDaysTable\");","map":{"version":3,"names":["React","useCallback","useState","jsxDEV","_jsxDEV","SelectDaysTable","onSelectedDaysChange","_s","selectedDays","setSelectedDays","days","times","getCellClass","time","day","some","item","style","backgroundColor","handleCellClick","cell","prevSelectedCells","cellInArray","updatedCells","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","toUpperCase","rowIndex","scope","dayIndex","onClick","href","display","width","height","_c","$RefreshReg$"],"sources":["/Users/deborabini/Documents/GitHub/piattaforma_tutoraggio/client/src/components/mainLayout/template/SelectDaysTable.js"],"sourcesContent":["import React, {useCallback, useState} from \"react\";\n\nfunction SelectDaysTable({ onSelectedDaysChange }) {\n    const [selectedDays, setSelectedDays] = useState([]); // Use useState to store the selected days\n\n    const days = ['lun', 'mar', 'mer', 'gio', 'ven', 'sab'];\n    const times = ['08:00', '09:00', '10:00', '11:00', '12:00', '14:00', '15:00', '16:00', '17:00', '18:00', '19:00'];\n\n    function getCellClass(time, day) {\n        if (selectedDays.some((item) => item.time === time && item.day === day)) {\n            return {\n                style: { backgroundColor: '#34c6eb' },\n            };\n        } else {\n            return {\n                style: { backgroundColor: 'transparent' },\n            };\n        }\n    }\n\n    const handleCellClick = useCallback((time, day) => {\n        const cell = { time, day };\n        setSelectedDays((prevSelectedCells) => {\n            if (prevSelectedCells.some((cellInArray) => cellInArray.time === time && cellInArray.day === day)) {\n                const updatedCells = prevSelectedCells.filter((cellInArray) => cellInArray.time!== time || cellInArray.day!== day);\n                onSelectedDaysChange(updatedCells); // Call the callback function with the updated state\n                return updatedCells;\n            } else {\n                const updatedCells = [...prevSelectedCells, cell];\n                onSelectedDaysChange(updatedCells); // Call the callback function with the updated state\n                return updatedCells;\n            }\n        });\n    }, [onSelectedDaysChange]);\n\n    return (\n        <table className=\"table\">\n            <thead>\n            <tr>\n                <th>Orario</th>\n                {days.map((day, index) => (\n                    <th key={index}>{day.toUpperCase()}</th>\n                ))}\n            </tr>\n            </thead>\n            <tbody>\n            {times.map((time, rowIndex) => (\n                <tr key={rowIndex}>\n                    <th scope=\"row\">{time}</th>\n                    {days.map((day, dayIndex) => {\n                        const { style } = getCellClass(time, day);\n                        return (\n                            <td\n                                key={dayIndex}\n                                style={style}\n                                onClick={() => handleCellClick(time, day)}\n                            >\n                                <a href=\"#\" style={{ display: \"block\", width: \"100%\", height: \"100%\" }}></a>\n                            </td>\n                        );\n                    })}\n                </tr>\n            ))}\n            </tbody>\n        </table>\n    );\n}\n\nexport default SelectDaysTable;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,WAAW,EAAEC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,eAAeA,CAAC;EAAEC;AAAqB,CAAC,EAAE;EAAAC,EAAA;EAC/C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEtD,MAAMQ,IAAI,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;EACvD,MAAMC,KAAK,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EAEjH,SAASC,YAAYA,CAACC,IAAI,EAAEC,GAAG,EAAE;IAC7B,IAAIN,YAAY,CAACO,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACH,IAAI,KAAKA,IAAI,IAAIG,IAAI,CAACF,GAAG,KAAKA,GAAG,CAAC,EAAE;MACrE,OAAO;QACHG,KAAK,EAAE;UAAEC,eAAe,EAAE;QAAU;MACxC,CAAC;IACL,CAAC,MAAM;MACH,OAAO;QACHD,KAAK,EAAE;UAAEC,eAAe,EAAE;QAAc;MAC5C,CAAC;IACL;EACJ;EAEA,MAAMC,eAAe,GAAGlB,WAAW,CAAC,CAACY,IAAI,EAAEC,GAAG,KAAK;IAC/C,MAAMM,IAAI,GAAG;MAAEP,IAAI;MAAEC;IAAI,CAAC;IAC1BL,eAAe,CAAEY,iBAAiB,IAAK;MACnC,IAAIA,iBAAiB,CAACN,IAAI,CAAEO,WAAW,IAAKA,WAAW,CAACT,IAAI,KAAKA,IAAI,IAAIS,WAAW,CAACR,GAAG,KAAKA,GAAG,CAAC,EAAE;QAC/F,MAAMS,YAAY,GAAGF,iBAAiB,CAACG,MAAM,CAAEF,WAAW,IAAKA,WAAW,CAACT,IAAI,KAAIA,IAAI,IAAIS,WAAW,CAACR,GAAG,KAAIA,GAAG,CAAC;QAClHR,oBAAoB,CAACiB,YAAY,CAAC,CAAC,CAAC;QACpC,OAAOA,YAAY;MACvB,CAAC,MAAM;QACH,MAAMA,YAAY,GAAG,CAAC,GAAGF,iBAAiB,EAAED,IAAI,CAAC;QACjDd,oBAAoB,CAACiB,YAAY,CAAC,CAAC,CAAC;QACpC,OAAOA,YAAY;MACvB;IACJ,CAAC,CAAC;EACN,CAAC,EAAE,CAACjB,oBAAoB,CAAC,CAAC;EAE1B,oBACIF,OAAA;IAAOqB,SAAS,EAAC,OAAO;IAAAC,QAAA,gBACpBtB,OAAA;MAAAsB,QAAA,eACAtB,OAAA;QAAAsB,QAAA,gBACItB,OAAA;UAAAsB,QAAA,EAAI;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACdpB,IAAI,CAACqB,GAAG,CAAC,CAACjB,GAAG,EAAEkB,KAAK,kBACjB5B,OAAA;UAAAsB,QAAA,EAAiBZ,GAAG,CAACmB,WAAW,CAAC;QAAC,GAAzBD,KAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAyB,CAC1C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACR1B,OAAA;MAAAsB,QAAA,EACCf,KAAK,CAACoB,GAAG,CAAC,CAAClB,IAAI,EAAEqB,QAAQ,kBACtB9B,OAAA;QAAAsB,QAAA,gBACItB,OAAA;UAAI+B,KAAK,EAAC,KAAK;UAAAT,QAAA,EAAEb;QAAI;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EAC1BpB,IAAI,CAACqB,GAAG,CAAC,CAACjB,GAAG,EAAEsB,QAAQ,KAAK;UACzB,MAAM;YAAEnB;UAAM,CAAC,GAAGL,YAAY,CAACC,IAAI,EAAEC,GAAG,CAAC;UACzC,oBACIV,OAAA;YAEIa,KAAK,EAAEA,KAAM;YACboB,OAAO,EAAEA,CAAA,KAAMlB,eAAe,CAACN,IAAI,EAAEC,GAAG,CAAE;YAAAY,QAAA,eAE1CtB,OAAA;cAAGkC,IAAI,EAAC,GAAG;cAACrB,KAAK,EAAE;gBAAEsB,OAAO,EAAE,OAAO;gBAAEC,KAAK,EAAE,MAAM;gBAAEC,MAAM,EAAE;cAAO;YAAE;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC,GAJvEM,QAAQ;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAKb,CAAC;QAEb,CAAC,CAAC;MAAA,GAbGI,QAAQ;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAcb,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEhB;AAACvB,EAAA,CAhEQF,eAAe;AAAAqC,EAAA,GAAfrC,eAAe;AAkExB,eAAeA,eAAe;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}